name: CI Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test-backend:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install backend dependencies
        run: npm install

      - name: Generate Prisma Client
        run: npx prisma generate

      - name: Run backend linter
        run: npm run lint

      - name: Run backend tests
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
        run: npm test

      - name: Build backend
        run: npm run build

  test-frontend:
    runs-on: ubuntu-latest
    needs: test-backend  # Ejecutar despuÃ©s del backend

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js for frontend
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Navigate to frontend directory
        run: cd sql_ewc_frontend

      - name: Install frontend dependencies
        run: |
          cd sql_ewc_frontend
          npm install

      - name: Run frontend linter
        run: |
          cd sql_ewc_frontend
          npm run lint

      - name: Run frontend tests
        run: |
          cd sql_ewc_frontend
          npm test

      - name: Build frontend
        run: |
          cd sql_ewc_frontend
          npm run build

  # Job opcional para combinar resultados (puedes omitirlo si no lo necesitas)
  completion:
    runs-on: ubuntu-latest
    needs: [test-backend, test-frontend]
    steps:
      - name: CI Pipeline completed successfully
        run: |
          echo "âœ… Backend tests passed"
          echo "âœ… Frontend tests passed"
          echo "âœ… All builds completed successfully"
          echo "ðŸš€ CI Pipeline finished without errors"
