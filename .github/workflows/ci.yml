name: CI Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: .  # Backend está en la raíz

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: 'npm'
          cache-dependency-path: 'package.json'

      - name: Install backend dependencies
        run: npm install

      - name: Generate Prisma Client
        run: npx prisma generate

      - name: Run backend linter
        run: npm run lint

      - name: Run backend tests
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
        run: npm test

      - name: Build backend
        run: npm run build

  test-frontend:
    runs-on: ubuntu-latest
    needs: test-backend  # Ejecutar después del backend
    defaults:
      run:
        working-directory: sql_ewc_frontend  # Frontend en subdirectorio

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js for frontend
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: 'npm'
          cache-dependency-path: 'sql_ewc_frontend/package.json'

      - name: Install frontend dependencies
        run: npm install

      - name: Run frontend linter
        run: npm run lint

      - name: Run frontend tests
        run: npm test

      - name: Build frontend
        run: npm run build
